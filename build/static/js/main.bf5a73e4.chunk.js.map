{"version":3,"sources":["firebase.js","Nav.js","axios.js","Requests.js","Banner.js","Row.js","screens/HomeScreen.js","screens/SignupScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/ProfileScreen.js","screens/Profiles.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Nav","useState","show","handleShow","dropdown","setDropdown","history","useHistory","transitionNavBar","window","scrollY","handleDropdown","useEffect","addEventListener","removeEventListener","className","src","alt","onClick","push","style","color","size","onMouseLeave","signOut","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","typing","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","handeleClick","id","key","map","poster_path","videoId","opts","height","width","playerVars","autoplay","HomeScreen","SignupScreen","emailRef","useRef","passwordRef","ref","placeholder","type","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","console","log","catch","error","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","class","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","ProfileScreen","useSelector","email","Profiles","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","path","exact","store","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf5a73e4.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD0Ai1o0ozXSPYSZvw3vQ1tBvvzW-Bf0_s\",\r\n    authDomain: \"netflix-a45ad.firebaseapp.com\",\r\n    projectId: \"netflix-a45ad\",\r\n    storageBucket: \"netflix-a45ad.appspot.com\",\r\n    messagingSenderId: \"709301965205\",\r\n    appId: \"1:709301965205:web:f1c98b794c40ee61d4669c\",\r\n    measurementId: \"G-JCZ9RXHW7Z\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export{ auth };\r\n  export default db;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  const [dropdown, setDropdown] = useState(false);\r\n  const history = useHistory();\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  const handleDropdown = () => {\r\n    if (!dropdown) {\r\n      setDropdown(true);\r\n    } else {\r\n      setDropdown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <div className=\"nav__contents\">\r\n        <div className=\"nav__contents1\">\r\n          <img\r\n            src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n            alt=\"\"\r\n            className=\"nav__logo\"\r\n            onClick={() => history.push(\"/\")}\r\n          />\r\n\r\n        </div>\r\n        <div className=\"nav__contents2\">\r\n          <div className=\"nav__contents2-profile\" onClick={handleDropdown}>\r\n            <img\r\n              onClick={() => history.push(\"/profile\")}\r\n              src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n              alt=\"\"\r\n              className=\"nav__avatar\"\r\n            />\r\n            <ArrowDropDownIcon style={{ color: \"white\", size: 40 }} />\r\n            {dropdown && (\r\n              <div\r\n                className=\"nav__account-dropdown\"\r\n                onMouseLeave={handleDropdown}\r\n              >\r\n                <ul className=\"nav__dropdown-profiles\">\r\n                    <h4>Who's Watching</h4>\r\n                  <li className=\"nav__dropdown-profile\">\r\n                    <img\r\n                      src=\"https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABeeinKf4qjR-VAaPOviRjcglAoSBnJKs2fY1tfA0nEj-xw-O_KK3gcSUYa2BOh9hE6ThxPEvcS4djBufuLM2ZV0.png?r=535\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p onClick={() => history.push(\"/\")}>Gautham</p>\r\n                  </li>\r\n                  <li className=\"nav__dropdown-profile\">\r\n                    <img\r\n                      src=\"https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABZIK6jqsRHlhlEmDoON8jYhl3g9VML7tmyNKM-HIpNkeAJJRKEyUVCig6fqILzcM_dspEFHOczXgfQgtHCGxiUI.png?r=a29\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p onClick={() => history.push(\"/\")}>Amoolya</p>\r\n                  </li>\r\n                  <li className=\"nav__dropdown-profile\">\r\n                    <img\r\n                      src=\"https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABa4D3GTp_NJnmsRwEPccmkPZWlwBTq-sKIpw1gOo1zbhAcixgwzKnVm_87jCYX3hQsrIZesG79mmISXxs_NrXAM.png?r=88c\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p onClick={() => history.push(\"/\")}>Abhiram</p>\r\n                  </li>\r\n                  <li className=\"nav__dropdown-profile\">\r\n                    <img\r\n                      src=\"https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABeWhh90Jhr88FfkPPsQzlkfArIFv6ztxOLHR3gweFd7iqahxtOH8Cqw7GuSfQJBcxkbMkINDQDx1oFQw3c2gPH0.png?r=cea\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p onClick={() => history.push(\"/\")}>Meghana</p>\r\n                  </li>\r\n                  <li className=\"nav__dropdown-profile\">\r\n                    <img\r\n                      src=\"https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABeW5HcypgSvS07jaMxDem7uIudk2vYwvVAYKBiwj9QJdRhHAxjwdVSvYJ1dlXVqACKABoBnzlVZehSG-VzhEp5A.png?r=8fb\"\r\n                      alt=\"\"\r\n                    />\r\n                    <p onClick={() => history.push(\"/\")}> Sruthi</p>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"nav__dropdown-manage\">\r\n                  <p onClick={() => history.push(\"/profiles\")}>\r\n                    Manage Profiles\r\n                  </p>\r\n                </div>\r\n                <ul className=\"nav__dropdown-account\">\r\n                  <li onClick={() => history.push(\"/profiles\")}>Account</li>\r\n                  <li>Help center</li>\r\n                  <li onClick={() => auth.signOut()}>Sign out of Netflix</li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","// TYpically we store in {process.env.API_KEY}\r\nconst API_KEY = \"19db5a305d16e755d6f1312e32331ddc\";\r\n\r\nconst requests = {\r\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_generes=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;","import React, { useEffect, useState } from \"react\";\r\nimport TypeWriter from \"react-typewriter\";\r\nimport \"./Banner.css\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./Requests\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"top center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          { /*</h1>)<TypeWriter typing={1}>*/}\r\n            {movie?.title || movie?.name || movie?.original_name}\r\n          {/*</TypeWriter>*/}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {\r\n            <TypeWriter typing={0.6}>\r\n              {truncate(`${movie?.overview}`, 200)}\r\n            </TypeWriter>\r\n          }\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState , useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\n\r\nconst base_url= \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n // Options for react-youtube\r\n const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n        autoplay: 1,\r\n    },\r\n};\r\n    \r\n// ASnippet of code which runs based on a specific condition\r\n    \r\nuseEffect(() => { \r\n\r\n// if [], runs once when the row loads, and dont run again\r\n\r\nasync function fetchData() {\r\nconst request = await axios.get(fetchUrl);\r\nsetMovies(request.data.results);\r\nreturn request;\r\n }\r\n fetchData();\r\n    }, [fetchUrl] );\r\n\r\n    const handeleClick = async (movie) => {\r\n        if(trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            let trailerUrl = await axios.get(\r\n                `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\r\n            );\r\n            setTrailerUrl(trailerUrl.data.results[0]?.key);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n            {/*several row posters*/}\r\n                {movies.map((movie) => movie.backdrop_path!== null && (\r\n                <img \r\n                className= {`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                src={`${base_url}${isLargeRow? movie.poster_path: movie.backdrop_path}`}\r\n                alt={movie.name}\r\n                key={movie.id}\r\n                onClick={() => handeleClick(movie)}\r\n                />\r\n                ))}\r\n            </div>\r\n          {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport \"../screens/HomeScreen.css\";\r\nimport Nav from \"../Nav\";\r\nimport Banner from\"../Banner\";\r\nimport requests from '../Requests';\r\nimport Row from \"../Row\";\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n        <div className=\"homeScreen\">\r\n           \r\n            <Nav />\r\n            <Banner/>\r\n            <Row  \r\n            title=\"Netflix Original\"\r\n            fetchUrl={requests.fetchNetflixOriginals}\r\n            isLargeRow/>\r\n            <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\r\n            <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\r\n            <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\r\n            <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\r\n            <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\r\n            <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\r\n             </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen; \r\n","import React, { useRef } from \"react\";\r\nimport { auth } from '../firebase';\r\nimport \"./SignupScreen.css\";\r\nfunction SignupScreen() {\r\n    const emailRef =  useRef(null);\r\n    const passwordRef =  useRef(null);\r\n\r\n\r\nconst register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n    .createUserWithEmailAndPassword(\r\n    emailRef.current.value,\r\n    passwordRef.current.value\r\n    )\r\n    .then ((authUser) => {\r\n        console.log(authUser);\r\n    })\r\n    .catch((error) => {\r\n        alert(error.message);\r\n    });\r\n};\r\n\r\nconst signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n    .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n        )\r\n        .then ((authUser) => {\r\n            console.log(authUser);\r\n        })\r\n        .catch((error) => { \r\n        alert(error.message);\r\n        });   \r\n};\r\n\r\n    return (\r\n        <div className=\"signupScreen\">\r\n          <form>\r\n             <h1>Sign IN / Register</h1>\r\n             <input ref={emailRef} placeholder =\"Email\" type = \"email\" />\r\n             <input ref={passwordRef}placeholder= \"Password\" type = \"password\" />\r\n             <button type = \"submit\" onClick={signIn}>Sign In</button>\r\n             <h3> <span className = \"signupScreen_or\">Or</span></h3>\r\n             <h4><span className = \"signupScreen_gray\">New to Netflix? Sign up now. </span> </h4> \r\n             <button type= \"submit\"  onClick={register}>Sign Up </button>\r\n              \r\n         </form>   \r\n       </div>\r\n    );\r\n}\r\n\r\nexport default SignupScreen;\r\n","import React, { useState } from 'react';\r\nimport \"./LoginScreen.css\";\r\nimport SignupScreen from \"./SignupScreen\";\r\n\r\nfunction LoginScreen() {\r\n    const [signIn, setSignIn] = useState(false);\r\n    return (\r\n        <div className = \"loginScreen\">\r\n            <div className = \"loginScreen_background\">\r\n                <img \r\n                 className=\"loginScreen_logo\"\r\n                src = \"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt = \"\" />\r\n\r\n            <button onClick={() => setSignIn(true)} class=\"loginScreen_button\"> sign In   </button>\r\n            <div className = \"loginScreen_gradient\" />\r\n            </div>\r\n            \r\n         <div className=\"loginScreen_body\">\r\n            {signIn ? (\r\n          <SignupScreen />\r\n            ) : (\r\n            <>\r\n                <h1>Unlimited films, TV programmes and more.</h1>\r\n                <h2>Watch anywhere. Cancel at any time.</h2>\r\n                <h3>\r\n                   Ready to watch? Enter your email to create or restart your\r\n                   membership.\r\n                </h3>\r\n            <div className=\"loginScreen_input\">\r\n              <form>\r\n                <input type=\"email\" placeholder=\"Email Address\" />\r\n                <button\r\n                onClick={() => setSignIn(true)}\r\n                className=\"loginScreen_getStarted\"\r\n                >\r\n                GET STARTED \r\n                </button>\r\n              </form>\r\n            </div>\r\n           </>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React from \"react\";\r\nimport \"./ProfileScreen.css\";\r\nimport Nav from \"../Nav\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\n\r\nfunction ProfileScreen() {\r\n  const user = useSelector(selectUser);\r\n\r\n  return (\r\n    <div className=\"profileScreen\">\r\n      <Nav />\r\n      <div className=\"profileScreen__body\">\r\n        <h2>Edit Profile </h2>\r\n        <div className=\"profileScreen__info\">\r\n          {/*<img\r\n            src=\"/https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n            alt=\"\"\r\n          />*/}\r\n          <div className=\"profileScreen__details\">\r\n            <h2>{user?.email}</h2>\r\n            <div className=\"profileScreen__plans\">\r\n              <h3>Plans</h3>\r\n              <button\r\n                onClick={() => auth.signOut()}\r\n                className=\"profileScreen__signOut\"\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;","import React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport \"./Profiles.css\";\r\nimport Nav from \"../Nav\";\r\n\r\nfunction Profiles() {\r\n  return (\r\n    <div className=\"profiles\">\r\n      <Nav />\r\n      <div className=\"profiles__body\">\r\n        <h1>Manage Profiles:</h1>\r\n        <div className=\"profiles__container\">\r\n          <div\r\n            className=\"profiles__profile\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABc0jTkOerx0tI4TfdbzDeSo-0rWVzoQ99XHdXB12g960QbEZb49eOHTiM656ruYYMc6MOqST_DNvPLv1uxIENbw2dMpE.png?r=535)\",\r\n            }}\r\n          >\r\n            <div className=\"profiles__avatarOpacity\" />\r\n            <EditIcon className=\"edit\" style={{ color: \"white\" }} />\r\n            {/*<h3>Gautham</h3>*/}\r\n          </div>\r\n          <div\r\n            className=\"profiles__profile\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABYlSMWtPaFD1O-rnzo6a96sg5v8nOxLuqi7ULy4Fgk1P7vH8kocPWCGD0WV2YIjfLNnxCkRNd3IvkkrAErKdGKaGmEEn.png?r=a29)\",\r\n            }}\r\n          >\r\n            <div className=\"profiles__avatarOpacity\" />\r\n            <EditIcon style={{ color: \"white\" }} />\r\n\r\n            {/*<h3>Amoolya</h3>*/}\r\n          </div>\r\n          <div\r\n            className=\"profiles__profile\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABaNSVf_1pbqwbDSgSn2MW5kZYbGQV_hHpNYXpZ1s8Qm0jRpYbb0-MIa1oEW4JoTPaTVmLpo-UU0sHULDzvcHS13AkcjG.png?r=88c)\",\r\n            }}\r\n          >\r\n            <div className=\"profiles__avatarOpacity\" />\r\n            <EditIcon style={{ color: \"white\" }} />\r\n            {/*<h3>Abhiram</h3>*/}\r\n          </div>\r\n          <div\r\n            className=\"profiles__profile\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABQSezyRh9HBbj3UkKUZudkjvwyHbNYw4IXKHetsW-lDRuqmPsrYGjj9kTIJRtNh7koRtDIIT8xsZAl91WBmCo-2b5lbL.png?r=cea)\",\r\n            }}\r\n          >\r\n            <div className=\"profiles__avatarOpacity\" />\r\n            <EditIcon style={{ color: \"white\" }} />\r\n            {/*<h3>Abhiram</h3>*/}\r\n          </div>\r\n          <div\r\n            className=\"profiles__profile\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(https://occ-0-3934-3933.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABfEfS070ckqk2cNOyk1qE04ONtZvmcai3L8LliVbA2XS1hx9bUCBXq2dhSIWFcFyWPpN6jnET1h11KUdBmYsLd4qzt73.png?r=8fb)\",\r\n            }}\r\n          >\r\n            <div className=\"profiles__avatarOpacity\" />\r\n            <EditIcon style={{ color: \"white\" }} />\r\n           {/*<h3>Abhiram</h3>*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profiles;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport Profiles from \"./screens/Profiles\";\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //log In\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        //logged Out\n        dispatch(logout());\n      }\n    });\n\n    return unsubscribe;\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <LoginScreen />\n        ) : (\n          <Switch>\n             <Route path=\"/profiles\">\n              <Profiles />\n            </Route>\n            <Route path=\"/profile\">\n              <ProfileScreen />\n            </Route>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from \"./app/store\";\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}